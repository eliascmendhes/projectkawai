---
import '@fontsource/bubblegum-sans';
import '@fontsource/vt323';
import Analytics from '@vercel/analytics/astro';
import SpeedInsights from '@vercel/speed-insights/astro';
import MusicPlayer from '../components/MusicPlayer.astro';
interface Props {
  title: string;
}

const { title } = Astro.props;

const menuItems = [
  { href: "/about", label: "Sobre mim" },
  { href: "/blog", label: "Blog" },
  { href: "/gallery", label: "Galeria" },
  { href: "/recommendations", label: "Recomenda√ß√µes" },
  { href: "/contact", label: "Contato" },
  { href: "/links", label: "Links" },
];
---

<!doctype html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Meu blog." />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Mochiy+Pop+One&family=Dela+Gothic+One&family=MS+Gothic&display=swap');
    </style>
    <style is:global>

      /* Estilos Kawaii Originais */

      ::-webkit-scrollbar {
        width: 12px;
      }

      ::-webkit-scrollbar-track {
        background: rgba(255, 209, 220, 0.3);
        border-radius: 10px;
      }

      ::-webkit-scrollbar-thumb {
        background: linear-gradient(45deg, #FF69B4, #FFB6C1);
        border: 3px solid rgba(255, 255, 255, 0.8);
        border-radius: 10px;
        transition: all 0.3s ease;
      }

      ::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(45deg, #FF1493, #FF69B4);
      }

      * {
        scrollbar-width: thin;
        scrollbar-color: #FF69B4 rgba(255, 209, 220, 0.3);
      }

      ::-webkit-scrollbar-button:single-button:vertical:start {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 24 24' fill='%23FF69B4'%3E%3Cpath d='M12 2L2 12h20L12 2z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: center;
        height: 12px;
      }

      ::-webkit-scrollbar-button:single-button:vertical:end {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 24 24' fill='%23FF69B4'%3E%3Cpath d='M12 22L2 12h20L12 22z'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: center;
        height: 12px;
      }

      /* Estilos retr√¥ */
      .nostalgic-mode {
        /* Paleta de Cores */
        --bg-color: #f0e6d6;
        --text-color: #333333;
        --border-color: #d3d3d3;
        --accent-color: #8b4513;

        /* Aplicando as cores ao body */
        background: var(--bg-color);
        color: var(--text-color);
      }

      .nostalgic-mode nav {
        background: #f8f8f8;
        border-bottom-color: #d3d3d3;
      }

      .nostalgic-mode a {
        color: #8b4513;
        font-family: 'MS Gothic', monospace;
      }

      .nostalgic-mode a:hover {
        color: #a0522d;
      }

      .nostalgic-mode .font-cherry, .nostalgic-mode .font-pixel {
        /* Fontes Web 1.0 */
        font-family: 'MS Gothic', monospace;
      }

      .nostalgic-mode .rounded-2xl {
        border-radius: 4px;
      }

      .nostalgic-mode .border-4 {
        border-width: 2px;
      }

      .nostalgic-mode .bg-white\/90 {
        background: #f5f5f5;
      }

      .nostalgic-mode .sparkle::after {
        content: "‚úß";
        position: absolute;
        color: #c0c0c0;
        opacity: 0.5;
        animation: sparkle 1.5s infinite;
      }

      .nostalgic-mode .animate-float {
        animation: none;
      }

      .nostalgic-mode .shadow-md {
        box-shadow: none;
      }


  /*
  .nostalgic-mode .grid {
    display: block;
  }
  */

      .nostalgic-mode .group > div {
        border: 1px solid var(--border-color);
        padding: 10px;
        margin-bottom: 10px;
      }

      .nostalgic-mode .pixel-divider {
        width: 100%;
        height: 20px;
        background-image: url('');
        background-repeat: repeat-x;
      }

      @keyframes sparkle {
        0%, 100% { opacity: 0; }
        50% { opacity: 1; }
      }

      /* Scrollbar Retr√¥ - N√£o est√° funcionando */
      :global(.nostalgic-mode)::-webkit-scrollbar {
        width: 16px;
      }

      :global(.nostalgic-mode)::-webkit-scrollbar-track {
        background: #f1f1f1;
        border: 1px solid #999;
        border-radius: 0;
      }

      :global(.nostalgic-mode)::-webkit-scrollbar-thumb {
        background: #c0c0c0;
        border: 1px outset #fff;
        border-radius: 0;
        transition: none;
      }

      :global(.nostalgic-mode)::-webkit-scrollbar-button:single-button {
        background-color: #c0c0c0;
        border: 1px outset #fff;
        height: 16px;
        width: 16px;
      }

      :global(.nostalgic-mode)::-webkit-scrollbar-button:single-button:vertical:start {
        background-image: none;
      }

      :global(.nostalgic-mode)::-webkit-scrollbar-button:single-button:vertical:end {
        background-image: none;
      }
    </style>
  </head>
  <body class="bg-gradient-to-br from-[#FFD1DC] to-[#FFF0F5] min-h-screen text-[#333]">
    <nav class="bg-white/90 backdrop-blur-sm fixed w-full top-0 z-50 border-b-4 border-[#FFC0CB] shadow-md">
      <div class="max-w-5xl mx-auto px-4">
        <div class="flex justify-between items-center h-16">
          <a href="/" class="font-[Dela+Gothic+One] text-2xl text-[#FF69B4] hover:scale-110 transition-transform">
            üå∏ bl√© bl√© üç°
          </a>

          <!-- Menu Desktop -->
          <div class="hidden md:flex items-center space-x-4 font-[Mochiy+Pop+One] text-lg">
            {menuItems.map(item => (
              <a
                href={item.href}
                class="text-[#8A4FFF] hover:text-[#FF69B4] hover:scale-110 transition-all"
              >
                {item.label}
              </a>
            ))}
            <!-- Bot√£o de Altern√¢ncia -->
            <button
              id="toggleNostalgic"
              class="p-2 rounded-lg bg-pink-100 hover:bg-pink-200 flex items-center"
            >
              <span class="nostalgic-button-text">Modo Kawaii</span>
            </button>
          </div>

          <!-- Bot√£o de Menu Mobile -->
          <button
            id="menuButton"
            class="md:hidden p-2 rounded-lg hover:bg-pink-100"
            aria-label="Toggle menu"
          >
            <svg
              class="w-6 h-6 text-[#FF69B4]"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16m-16 6h16"
              />
            </svg>
          </button>
        </div>

        <!-- Menu Mobile -->
        <div id="mobileMenu" class="hidden md:hidden">
          <div class="px-2 pt-2 pb-3 space-y-1 font-[Mochiy+Pop+One]">
            {menuItems.map(item => (
              <a
                href={item.href}
                class="block px-3 py-2 text-base text-[#8A4FFF] hover:text-[#FF69B4] hover:bg-pink-50 rounded-md transition-colors"
              >
                {item.label}
              </a>
            ))}
            <!-- Bot√£o de Altern√¢ncia no Menu Mobile -->
            <button id="toggleNostalgicMobile" class="mt-2 w-full p-2 rounded-lg bg-pink-100 hover:bg-pink-200">
              <span class="nostalgic-button-text">Modo Kawaii</span>
            </button>
          </div>
        </div>
      </div>
    </nav>

    <main class="pt-20 pb-8 px-4">
      <slot />
    </main>

    <footer class="bg-white/90 backdrop-blur-sm border-t-4 border-[#FFC0CB] py-4">
      <div class="max-w-5xl mx-auto px-4 text-center font-[Mochiy+Pop+One]">
        <p>üåà Em desenvolvimento üç∞</p>
      </div>
    </footer>
    <script>
      // Toggle de modo retr√¥
      const toggleButton = document.getElementById('toggleNostalgic');
      const toggleButtonMobile = document.getElementById('toggleNostalgicMobile');
      const body = document.body;

      // Fun√ß√£o para atualizar o texto do bot√£o
      function updateButtonText(isNostalgic) {
        const text = isNostalgic ? 'Modo Kawaii' : 'Modo Retr√¥';
        document.querySelectorAll('.nostalgic-button-text').forEach(el => {
          el.textContent = text;
        });
      }

      // Carregar prefer√™ncia do usu√°rio
      const isNostalgicMode = localStorage.getItem('nostalgicMode') === 'enabled';
      if (isNostalgicMode) {
        body.classList.add('nostalgic-mode');
        updateButtonText(true);
      }

      const toggleNostalgicMode = () => {
        body.classList.toggle('nostalgic-mode');
        const isNostalgic = body.classList.contains('nostalgic-mode');
        updateButtonText(isNostalgic);

        if (isNostalgic) {
          localStorage.setItem('nostalgicMode', 'enabled');
        } else {
          localStorage.setItem('nostalgicMode', 'disabled');
        }
      };

      if (toggleButton) {
        toggleButton.addEventListener('click', toggleNostalgicMode);
      }
      if (toggleButtonMobile) {
        toggleButtonMobile.addEventListener('click', toggleNostalgicMode);
      }
    </script>
    <script>
      // Toggle Menu Mobile
      const menuButton = document.getElementById('menuButton');
      const mobileMenu = document.getElementById('mobileMenu');

      if (menuButton && mobileMenu) {
        menuButton.addEventListener('click', () => {
          const isExpanded = mobileMenu.classList.contains('hidden');

          if (isExpanded) {
            mobileMenu.classList.remove('hidden');
          } else {
            mobileMenu.classList.add('hidden');
          }
        });

        // Fecha o menu ao clicar em um link
        const mobileLinks = mobileMenu.querySelectorAll('a');
        mobileLinks.forEach(link => {
          link.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
          });
        });

        // Fecha o menu ao clicar fora dele
        document.addEventListener('click', (event) => {
          const isClickInside = menuButton.contains(event.target as Node) || mobileMenu.contains(event.target as Node);

          if (!isClickInside && !mobileMenu.classList.contains('hidden')) {
            mobileMenu.classList.add('hidden');
          }
        });
      }
    </script>
    <MusicPlayer />
    <Analytics />
    <SpeedInsights />
  </body>
</html>
