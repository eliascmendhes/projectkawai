---
import '@fontsource/vt323';
import Analytics from '@vercel/analytics/astro';
import SpeedInsights from '@vercel/speed-insights/astro';
import MusicPlayer from '../components/MusicPlayer.astro';
interface Props {
  title: string;
}

const { title } = Astro.props;

const menuItems = [
  { href: "/about", label: "Sobre mim" },
  { href: "/blog", label: "Blog" },
  { href: "/gallery", label: "Galeria" },
  { href: "/recommendations", label: "Recomendações" },
  { href: "/contact", label: "Contato" },
  { href: "/links", label: "Links" },
];
---

<!doctype html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Meu blog." />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <style is:global>
      /* Estilos base */
      body {
        --bg-color: #1e1e2e;
        --text-color: #e0e0e0;
        --primary: #2b2b3b;
        --accent: #363649;
        --border: #404059;
        --highlight: #4a4a6a;
        --title-color: #90c8ff;
        --button-gradient: linear-gradient(to bottom, #363649, #2b2b3b);
        --button-hover: linear-gradient(to bottom, #4a4a6a, #363649);
        --window-gradient: linear-gradient(to right, #1e4d8f, #2787E9, #1e4d8f);

        background-color: var(--bg-color);
        color: var(--text-color);
        font-family: 'Tahoma', 'VT323', monospace;
        line-height: 1.6;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
      }

      /* Navegação estilo Windows XP escuro */
      nav {
        background: var(--window-gradient);
        border: 1px solid #003399;
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.2),
          inset -1px -1px rgba(0,0,0,0.3),
          0 2px 4px rgba(0,0,0,0.3);
      }

      /* Links com efeito Windows XP */
      a {
        color: var(--text-color);
        text-decoration: none;
        padding: 4px 8px;
        border: 2px solid transparent;
      }

      a:hover {
        background: rgba(255, 255, 255, 0.1);
        border: 2px solid;
        border-color: rgba(255,255,255,0.2) rgba(0,0,0,0.2) rgba(0,0,0,0.2) rgba(255,255,255,0.2);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.2);
      }

      /* Botões estilo Windows XP escuro */
      button {
        background: var(--button-gradient);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3);
        color: var(--text-color);
        font-family: 'Tahoma', monospace;
        padding: 4px 12px;
        cursor: pointer;
      }

      button:hover {
        background: var(--button-hover);
      }

      button:active {
        border-color: var(--border) var(--highlight) var(--highlight) var(--border);
        box-shadow:
          inset 1px 1px rgba(0,0,0,0.3),
          inset -1px -1px rgba(255,255,255,0.1);
        padding-top: 5px;
        padding-left: 13px;
      }

      /* Scrollbar Windows XP escura */
      ::-webkit-scrollbar {
        width: 16px;
        background: var(--primary);
      }

      ::-webkit-scrollbar-thumb {
        background: var(--button-gradient);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3);
      }

      /* Títulos estilo Windows XP */
      h1, h2, h3, h4, h5, h6 {
        color: var(--title-color);
        font-family: 'Tahoma', 'VT323', monospace;
        border-bottom: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        padding-bottom: 4px;
        margin-bottom: 1rem;
      }

      /* Container principal */
      main {
        background: var(--primary);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3),
          0 2px 4px rgba(0,0,0,0.3);
        margin: 20px;
        padding: 20px;
        flex: 1;
      }

      /* Menu Mobile */
      #mobileMenu {
        background: var(--primary);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3);
        margin-top: 4px;
      }

      #mobileMenu a {
        display: block;
        padding: 8px 16px;
        margin: 4px;
      }

      #mobileMenu a:hover {
        background: var(--accent);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
      }

      /* Estilos do footer */
      .footer {
        width: 100%;
        background: var(--primary);
        border-top: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3);
        padding: 1rem 0;
        margin-top: auto;
      }

      .footer p {
        margin: 0.5rem 0;
        font-family: 'Tahoma', 'VT323', monospace;
        color: var(--text-color);
      }

      /* Botão do Menu Mobile */
      .menu-button {
        display: flex;
        align-items: center;
        gap: 4px;
        background: var(--button-gradient);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3);
        padding: 4px 12px;
        font-size: 0.9rem;
      }

      .menu-icon {
        font-size: 1.2rem;
        line-height: 1;
      }

      /* Container do Menu Mobile */
      .mobile-menu {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: var(--primary);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3),
          0 4px 8px rgba(0,0,0,0.5);
        margin: 4px;
        z-index: 50;
      }

      /* Cabeçalho do Menu */
      .menu-header {
        background: var(--window-gradient);
        padding: 8px 12px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 2px solid var(--border);
      }

      .menu-title {
        color: white;
        font-weight: bold;
        font-size: 0.9rem;
      }

      .close-button {
        background: none;
        border: none;
        color: white;
        font-size: 1.5rem;
        padding: 0 4px;
        line-height: 1;
        box-shadow: none;
      }

      /* Items do Menu */
      .menu-items {
        padding: 8px;
      }

      .menu-item {
        display: block;
        padding: 10px 16px;
        margin: 4px 0;
        background: var(--button-gradient);
        border: 2px solid;
        border-color: var(--highlight) var(--border) var(--border) var(--highlight);
        box-shadow:
          inset 1px 1px rgba(255,255,255,0.1),
          inset -1px -1px rgba(0,0,0,0.3);
        transition: all 0.2s;
      }

      .menu-item:hover {
        background: var(--button-hover);
        transform: translateX(4px);
      }

      .menu-item:active {
        border-color: var(--border) var(--highlight) var(--highlight) var(--border);
        box-shadow:
          inset 1px 1px rgba(0,0,0,0.3),
          inset -1px -1px rgba(255,255,255,0.1);
        padding-left: 18px;
      }

      @media (min-width: 1024px) {
        .menu-button,
        .mobile-menu {
          display: none !important;
        }
      }
    </style>
  </head>
  <body>
    <nav class="fixed w-full top-0 z-50">
      <div class="max-w-5xl mx-auto px-4">
        <div class="flex justify-between items-center h-16">
          <a href="/" class="text-xl">
            <span>[ blé blé ]</span>
          </a>

          <!-- Menu Desktop -->
          <div class="hidden lg:flex items-center space-x-2">
            {menuItems.map(item => (
              <a href={item.href}>
                {item.label}
              </a>
            ))}
          </div>

          <!-- Botão Menu Mobile -->
          <button
            id="menuButton"
            class="lg:hidden menu-button"
            aria-label="Toggle menu"
          >
            <span class="menu-icon">≡</span>
            Menu
          </button>
        </div>

        <!-- Menu Mobile -->
        <div id="mobileMenu" class="hidden lg:hidden mobile-menu">
          <div class="menu-header">
            <span class="menu-title">Menu Principal</span>
            <button id="closeMenu" class="close-button" aria-label="Close menu">×</button>
          </div>
          <div class="menu-items">
            {menuItems.map(item => (
              <a href={item.href} class="menu-item">
                ► {item.label}
              </a>
            ))}
          </div>
        </div>
      </div>
    </nav>

    <main class="pt-20 pb-8 px-4">
      <slot />
    </main>

    <footer class="footer">
      <div class="max-w-5xl mx-auto px-4 text-center">
        <p>[ Em desenvolvimento ]</p>
        <p>Melhor visualizado em 800x600</p>
      </div>
    </footer>
    <MusicPlayer />
    <Analytics />
    <SpeedInsights />
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const menuButton = document.getElementById('menuButton');
        const closeButton = document.getElementById('closeMenu');
        const mobileMenu = document.getElementById('mobileMenu');

        const toggleMenu = () => {
          mobileMenu?.classList.toggle('hidden');
        };

        menuButton?.addEventListener('click', toggleMenu);
        closeButton?.addEventListener('click', toggleMenu);

        // Fechar menu ao clicar fora
        document.addEventListener('click', (e) => {
          const target = e.target as Node;
          if (!menuButton?.contains(target) &&
              !mobileMenu?.contains(target) &&
              !mobileMenu?.classList.contains('hidden')) {
            toggleMenu();
          }
        });
      });
    </script>
  </body>
</html>
