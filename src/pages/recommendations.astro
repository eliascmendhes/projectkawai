---
import Layout from '../layouts/Layout.astro';

const recommendations = {
  music: [
    {
      title: "Minecraft",
      artist: "C418",
      rating: 5,
      type: "Ambient, Electronic, IDM",
      description: "Música icônica que define a atmosfera do jogo Minecraft",
      image: "/images/musica/minecraft.jpg"
    },
    {
      title: "Is This It",
      artist: "The Strokes",
      rating: 5,
      type: "Rock, Indie",
      description: "Álbum que definiu o indie rock dos anos 2000",
      image: "/images/musica/isthisit.jpg"
    },
    {
      title: "Meat Is Murder",
      artist: "The Smiths",
      rating: 5,
      type: "Rock, Indie",
      description: "Álbum clássico que captura a essência do indie alternativo",
      image: "/images/musica/meatismurder.jpg"
    },
    {
      title: "The Suburbs",
      artist: "Arcade Fire",
      rating: 5,
      type: "Rock, Indie",
      description: "Explorando vida suburbana e relembrando dos  velhos tempos.",
      image: "/images/musica/thesuburbs.jpg"
    }
  ],
  movies: [
    {
      title: "Aftersun",
      year: 2022,
      rating: 5,
      genre: "Drama",
      description: "Uma reflexão emocionante sobre memória e relacionamento familiar",
      image: "/images/films/aftersun.jpg",
    },
    {
      title: "Sound of Metal",
      year: 2019,
      rating: 5,
      genre: "Drama",
      description: "História poderosa sobre um baterista que perde a audição",
      image: "/images/films/soundofmetal.jpg",
    },
    {
      title: "Manchester by the Sea",
      year: 2016,
      rating: 5,
      genre: "Drama",
      description: "Drama intenso sobre perda, culpa e redenção",
      image: "/images/films/manchesterbythesea.jpg"
    },
    {
      title: "Se7en",
      year: 1995,
      rating: 5,
      genre: "Crime, Mistério, Thriller",
      description: "Thriller psicológico noir.",
      image: "/images/films/seven.jpg"
    }
  ],
  games: [
    {
      title: "Minecraft",
      platform: "PC, Xbox",
      rating: 5,
      type: "Sobrevivência e Construção",
      description: "Jogo que revolucionou os jogos de mundo aberto e criatividade",
      image: "/images/recomendacoes/minecraft.jpg"
    },
    {
      title: "Red Dead Redemption 2",
      platform: "PS4, Xbox, PC",
      rating: 5,
      type: "Mundo Aberto, Narrativo",
      description: "Épico western com narrativa profunda e mundo imersivo",
      image: "/images/recomendacoes/rdr2.jpg"
    },
    {
      title: "The Sims 2",
      platform: "PC",
      rating: 5,
      type: "Simulação de Vida",
      description: "Clássico da simulação que definiu uma geração de jogadores",
      image: "/images/recomendacoes/ts2.jpg"
    },
    {
      title: "The Last of Us (Part 1 & 2)",
      platform: "PS4, PS5",
      rating: 5,
      type: "Ação-Aventura, Sobrevivência",
      description: "Série que redefiniu narrativas em jogos de sobrevivência",
      image: "/images/recomendacoes/tlou.jpg"
    }
  ]
};

function renderStars(rating: number) {
  return "★".repeat(rating);
}
---

<Layout title="Recomendações">
  <div class="window max-w-5xl mx-auto">
    <div class="window-header">
      <div class="window-title">Minhas Recomendações</div>
      <div class="window-controls">
        <span class="minimize">_</span>
        <span class="maximize">□</span>
        <span class="close">×</span>
      </div>
    </div>

    <div class="window-content">
      <!-- Navegação -->
      <div class="xp-nav">
        <button class="xp-button active" data-category="music">
          <span class="bracket hidden sm:inline">[</span>
          Música
          <span class="bracket hidden sm:inline">]</span>
        </button>
        <button class="xp-button" data-category="movies">
          <span class="bracket hidden sm:inline">[</span>
          Filmes
          <span class="bracket hidden sm:inline">]</span>
        </button>
        <button class="xp-button" data-category="games">
          <span class="bracket hidden sm:inline">[</span>
          Jogos
          <span class="bracket hidden sm:inline">]</span>
        </button>
      </div>

      <!-- Container das recomendações -->
      <div class="recommendations-container">
        {Object.entries(recommendations).map(([category, items]) => (
          <section id={category} class={`recommendation-section ${category === 'music' ? 'active' : ''}`}>
            <div class="xp-grid">
              {items.map(item => (
                <div class="xp-card">
                  <div class="xp-card-header">
                    <span class="xp-card-title">{item.title}</span>
                  </div>
                  <div class="xp-card-image">
                    <img src={item.image} alt={item.title} loading="lazy" />
                  </div>
                  <div class="xp-card-content">
                    <h3>{item.title}</h3>
                    <p class="xp-subtitle">
                      {category === 'music' ? item.artist :
                       category === 'movies' ? item.year :
                       item.platform}
                    </p>
                    <div class="xp-rating">{renderStars(item.rating)}</div>
                  </div>
                </div>
              ))}
            </div>
          </section>
        ))}
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Janela Principal */
  .window {
    background: #ECE9D8;
    border: 1px solid #0054E3;
    border-radius: 8px 8px 0 0;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
    margin: 20px auto;
    width: 95%;
  }

  .window-header {
    background: linear-gradient(to right, #0054E3, #2787E9, #0054E3);
    padding: 5px 10px;
    border-radius: 7px 7px 0 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: white;
    font-weight: bold;
  }

  .window-content {
    padding: 16px;
  }

  /* Navegação */
  .xp-nav {
    display: flex;
    gap: 8px;
    margin-bottom: 16px;
    justify-content: center;
    flex-wrap: wrap;
  }

  .xp-button {
    background: linear-gradient(to bottom, #F6F6F6, #DCDBDB);
    border: 2px solid;
    border-color: #FFFFFF #808080 #808080 #FFFFFF;
    box-shadow: inset 1px 1px #FFFFFF, inset -1px -1px #404040;
    color: #000000;
    font-family: 'Tahoma', sans-serif;
    padding: 8px 16px;
    cursor: pointer;
    min-width: 100px;
    text-align: center;
  }

  @media (max-width: 640px) {
    .xp-button {
      flex: 1;
      padding: 12px 8px;
      font-size: 0.9rem;
    }

    .xp-nav {
      gap: 4px;
      padding: 0 8px;
    }
  }

  .xp-button:hover {
    background: linear-gradient(to bottom, #FFF, #E9E9E9);
  }

  .xp-button.active {
    background: #0054E3;
    color: #FFFFFF;
    border-color: #003399;
    box-shadow: inset 1px 1px #003399, inset -1px -1px #0066FF;
  }

  /* Grid de Cards */
  .xp-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 16px;
    padding: 16px;
  }

  /* Cards */
  .xp-card {
    background: #FFFFFF;
    border: 2px solid;
    border-color: #FFFFFF #808080 #808080 #FFFFFF;
    box-shadow: inset 1px 1px #FFFFFF, inset -1px -1px #404040;
  }

  .xp-card-header {
    background: linear-gradient(to right, #0054E3, #2787E9);
    color: white;
    padding: 4px 8px;
    font-family: 'Tahoma', sans-serif;
    font-size: 0.9rem;
  }

  .xp-card-image {
    border: 1px solid #808080;
    padding: 2px;
    background: #FFFFFF;
  }

  .xp-card-image img {
    width: 100%;
    aspect-ratio: 1;
    object-fit: cover;
  }

  .xp-card-content {
    padding: 8px;
    font-family: 'Tahoma', sans-serif;
  }

  .xp-card-content h3 {
    color: #000000;
    font-size: 0.875rem;
    font-weight: bold;
    margin-bottom: 2px;
  }

  .xp-subtitle {
    color: #000000;
    font-size: 0.75rem;
  }

  .xp-rating {
    color: #000080;
    font-size: 0.75rem;
    margin-top: 2px;
  }

  /* Atualização nos estilos de visibilidade */
  .recommendation-section {
    display: none;
  }

  #music {
    display: block; /* Seção de música visível por padrão */
  }

  .window-controls {
    display: flex;
    gap: 4px;
  }

  .window-controls span {
    width: 16px;
    height: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom, #FFF, #DFDFDF);
    border: 1px solid #0054E3;
    border-radius: 2px;
    color: #000;
    font-size: 0.7rem;
    cursor: pointer;
  }

  .minimize {
    padding-top: 3px;
  }

  .maximize {
    font-size: 0.8rem;
    padding-bottom: 1px;
  }

  .close {
    font-size: 0.9rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll<HTMLButtonElement>('.xp-button');
    const sections = document.querySelectorAll<HTMLElement>('.recommendation-section');

    // Função para mostrar apenas a seção selecionada
    const showSection = (categoryId: string) => {
      sections.forEach((section: HTMLElement) => {
        if (section instanceof HTMLElement) {
          section.style.display = section.id === categoryId ? 'block' : 'none';
        }
      });

      buttons.forEach((button: HTMLButtonElement) => {
        if (button instanceof HTMLButtonElement) {
          const isActive = button.dataset.category === categoryId;
          button.classList.toggle('active', isActive);
        }
      });
    };

    // Adiciona evento de clique para cada botão
    buttons.forEach((button: HTMLButtonElement) => {
      button.addEventListener('click', () => {
        const categoryId = button.dataset.category;
        if (categoryId) {
          showSection(categoryId);
        }
      });
    });

    // Mostra música por padrão
    showSection('music');
  });
</script>
